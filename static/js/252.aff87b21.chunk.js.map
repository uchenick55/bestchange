{"version":3,"file":"static/js/252.aff87b21.chunk.js","mappings":"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","sources":["webpack://bestchange/./src/components/common/CommonClasses/common.module.css?ffe7","components/Calculator/Calculator.tsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/Calculator/calculator-selectors.tsx","components/Calculator/CalculatorContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"pageHeader\":\"common_pageHeader__3DX9g\"};","import React from \"react\";\r\nimport {ErrorsType, PairType} from \"../Types/commonTypes\";\r\n\r\ntype CalculatorType = {\r\n    selectValue1: string\r\n    selectValue2: string\r\n    Qty1: number\r\n    Qty2: number\r\n    Errors: ErrorsType //все ошибки формы\r\n    setQty1AC: (Qty1: number) => void\r\n    setQty2AC: (Qty2: number) => void\r\n    setSelectValue1: (selectValue1: string) => void,\r\n    setSelectValue2: (selectValue2: string) => void,\r\n    MyPairData: PairType\r\n    Range1: Array<string> // диапазон значений для селекта 1\r\n    Range2: Array<string> // диапазон значений для селекта 2\r\n\r\n\r\n}\r\nconst Calculator: React.FC<CalculatorType> = ({\r\n                                                selectValue1, selectValue2, Qty1, Qty2,\r\n                                                setQty1AC, setQty2AC, setSelectValue1,\r\n                                                setSelectValue2, MyPairData, Range1, Range2,\r\n                                                Errors\r\n                                            }) => {\r\n\r\n    const kurs:string = MyPairData.IN>MyPairData.OUT // вывод\r\n        // меняем порядок отображения валют в курсе в зависимости от того, что больше\r\n        ? `Курс обмена ${Math.round(100*MyPairData.IN / MyPairData.OUT)/100} ${MyPairData.FROM} =  1  ${MyPairData.TO} `\r\n        : `Курс обмена 1  ${MyPairData.FROM} = ${Math.round(100*MyPairData.OUT / MyPairData.IN)/100} ${MyPairData.TO}  `\r\n\r\n    const inputsRender = <div> {/*отрисовка формы калькулятора*/}\r\n        <select value={selectValue1} onChange={(e) => {\r\n            setSelectValue1(e.currentTarget.value)\r\n        }}>\r\n            {Range1.map(r=>{\r\n                return <option key={r}>{r}</option> // вывод первого селекта из Range1\r\n            })}\r\n        </select>\r\n        <label htmlFor={\"Qty1\"}>Отдаю</label>\r\n        <input name={\"Qty1\"}  type=\"text\" value={Qty1} onChange={(e) => {\r\n            setQty1AC(Number(e.currentTarget.value))\r\n        }}/>\r\n        {Errors.ErrorInput1}\r\n        <br/>\r\n        <select value={selectValue2} onChange={(e) => {\r\n            setSelectValue2(e.currentTarget.value)\r\n        }}>\r\n            {Range2.map(r=>{\r\n                return <option key={r}>{r}</option> // вывод второго селекта из Range2\r\n            })}\r\n        </select>\r\n        <label htmlFor={\"Qty2\"}>Получаю</label>\r\n\r\n        <input name={\"Qty2\"} type=\"text\" value={Qty2} onChange={(e) => {\r\n            setQty2AC(Number(e.currentTarget.value))\r\n        }}/>\r\n        {Errors.ErrorInput2}\r\n\r\n    </div>\r\n\r\n    return <div>\r\n        {kurs}\r\n        {inputsRender}\r\n    </div>\r\n}\r\n\r\nexport default Calculator","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import {createSelector} from \"reselect\";\r\nimport {GlobalStateType} from \"../../redux/store-redux\";\r\nimport {PairType} from \"../Types/commonTypes\";\r\n\r\n\r\n\r\nexport const CalculatorSelectorsSimple = { // простые селекторы из стейта\r\n    getRange1: (state:GlobalStateType) => {\r\n        const RangeLocal:Array<string> | null = []\r\n        state.bestChange.bestChangeData && state.bestChange.bestChangeData.forEach((b)=>{\r\n            if( b.TO === state.bestChange.MyPairData.TO) {\r\n                RangeLocal.push(b.FROM) // выбрать только пары к валюте FROM\r\n            }\r\n        })\r\n        return RangeLocal\r\n    },\r\n    getRange2: (state:GlobalStateType) => {\r\n        const RangeLocal:Array<string> | null = []\r\n        state.bestChange.bestChangeData && state.bestChange.bestChangeData.forEach((b)=>{\r\n            if( b.FROM === state.bestChange.MyPairData.FROM) {\r\n                RangeLocal.push(b.TO) // выбрать только пары к валюте TO\r\n            }\r\n        })\r\n        return RangeLocal\r\n    },\r\n    MyPairData: (state:GlobalStateType) => {\r\n        return state.bestChange.MyPairData\r\n    }\r\n}\r\n\r\nexport const getRange1Reselect = createSelector(CalculatorSelectorsSimple.getRange1, (Range1) => {\r\n    return Range1 // мемоизация данных фильтрации для первого диапазона валют\r\n})\r\nexport const getRange2Reselect = createSelector(CalculatorSelectorsSimple.getRange2, (Range2) => {\r\n    return Range2 // мемоизация данных фильтрации для второго диапазона валют\r\n})\r\n","import React, {useEffect} from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport Container from \"react-bootstrap/Container\";\r\nimport commonClasses from \"../common/CommonClasses/common.module.css\";\r\nimport {connect} from \"react-redux\";\r\nimport {ErrorsType, PairType} from \"../Types/commonTypes\";\r\nimport {\r\n    selectValue1AC,\r\n    selectValue2AC, setErrorsAC,\r\n    setMyPairDataAC,\r\n    setQty1AC,\r\n    setQty2AC,\r\n    setRangesAC\r\n} from \"../../redux/bestchange-reducer\";\r\nimport Calculator from \"./Calculator\";\r\nimport {CalculatorSelectorsSimple, getRange1Reselect, getRange2Reselect} from \"./calculator-selectors\";\r\nimport {GlobalStateType} from \"../../redux/store-redux\";\r\n\r\nexport type CalculatorType = {\r\n    MyPairData: PairType // только на чтение изнутри калькулятора\r\n    selectValue1: string, // значение селекта 1 (валюты 1) (на его основе фильтруется bestChangeData и получаем MyPairData)\r\n    selectValue2: string,// значение селекта 2 (валюты 2) (на его основе фильтруется bestChangeData и получаем MyPairData)\r\n    Qty1: number, // значение поля валюты 1 - при его вводе вычисляется Qty2\r\n    Qty2: number,// значение поля валюты 2 - при его вводе вычисляется Qty1\r\n    Range1: Array<string> // диапазон значений для селекта 1\r\n    Range2: Array<string> // диапазон значений для селекта 2\r\n    Errors: ErrorsType //все ошибки формы\r\n    selectValue1AC: (selectValue1: string) => void,// задание значения из первого списка валют\r\n    selectValue2AC: (selectValue2: string) => void,// задание значения из второго списка валют\r\n    setQty1AC: (Qty1: number) => void,// задание значения из первого поля ввода\r\n    setQty2AC: (Qty2: number) => void, // задание значения из второго поля ввода\r\n    setMyPairDataAC:(selectValue1: string, selectValue2:string) => void, // задание данных для новой пары\r\n    setRangesAC: (Range1: Array<string>, Range2: Array<string>) => void, // задание диапазонов валют для выбора\r\n    setErrorsAC: (Errors: ErrorsType)=> void // задание ошибок формы\r\n\r\n}\r\nconst CalculatorContainer: React.FC<CalculatorType> = ({   MyPairData, selectValue1,\r\n                                                  selectValue2, Qty1, Qty2,\r\n                                                  selectValue1AC, selectValue2AC, setQty1AC, setQty2AC,\r\n                                                  Range1, Range2,setMyPairDataAC, setRangesAC,\r\n                                                  Errors, setErrorsAC\r\n                                                }) => {\r\n\r\n\r\n    useEffect(()=>{//при изменении пары валют записываем диапазоны валют в стейт\r\n        setRangesAC(Range1, Range2) //\r\n        // записать в стейт Range1 и Range2\r\n        setQty1AC(MyPairData.MINAMOUNT)\r\n        //задать в MINAMOUNT значение поля Qty1\r\n    },[selectValue1, selectValue2])\r\n\r\n    useEffect(()=>{// валидация формы\r\n        let ErrorLocal = Object.assign({}, Errors); // поверхностно копируем весь объект ошибок\r\n        if (Qty1>=MyPairData.MAXAMOUNT) {\r\n            ErrorLocal.ErrorInput1 = `максимум ${MyPairData.MAXAMOUNT}`\r\n        }\r\n        if (Qty1<=MyPairData.MINAMOUNT) {\r\n            ErrorLocal.ErrorInput1 = `минимум  ${MyPairData.MINAMOUNT}`\r\n        }\r\n        if (Qty1>=MyPairData.MINAMOUNT && Qty1<=MyPairData.MAXAMOUNT) {\r\n            ErrorLocal.ErrorInput1 = \"\"\r\n        }\r\n        if (Qty2>MyPairData.AMOUNT) {\r\n            ErrorLocal.ErrorInput2 = `максимум ${MyPairData.AMOUNT}`\r\n        }\r\n        if (Qty2<0) {\r\n            ErrorLocal.ErrorInput2 = `не меньше 0`\r\n        }\r\n        if (Qty2>0 && Qty2<=MyPairData.AMOUNT) {\r\n            ErrorLocal.ErrorInput2 = ``\r\n        }\r\n\r\n        setErrorsAC(ErrorLocal) // запись в стейт обновленного объекта с ошибками\r\n\r\n    },[Qty1,Qty2, MyPairData.MAXAMOUNT, MyPairData.MINAMOUNT])\r\n\r\n    const setSelectValue1=(selectValue1: string)=>{ // действия при выборе валюты в первом селекте\r\n        selectValue1AC(selectValue1) // задаем в стейте измененное значение первой пары\r\n        const TOLocal:string = MyPairData.TO// берем из стейта вторую пару\r\n        setMyPairDataAC(selectValue1, TOLocal)\r\n    }\r\n    const setSelectValue2=(selectValue2: string)=>{// действия при выборе валюты во втором селекте\r\n        selectValue2AC(selectValue2) // задаем в стейте измененное значение второй пары\r\n        const FROMLocal:string = MyPairData.FROM// берем из стейта первую пару\r\n        setMyPairDataAC(FROMLocal,selectValue2) // устанавливаем все значения новой пары\r\n    }\r\n    useEffect(()=>{// при каждом изменении полей FROM и TO в MyPairData\r\n        selectValue1AC(MyPairData.FROM) // задаем в стейте измененное значение первой валюты\r\n        selectValue2AC(MyPairData.TO) // задаем в стейте измененное значение второй валюты\r\n    },[MyPairData.FROM,MyPairData.TO])\r\n\r\n    const reverseCurrency = () => { // инвертируем пару по нажатию кнопки\r\n        setMyPairDataAC(selectValue2,selectValue1)\r\n    }\r\n\r\n    const home = <div>\r\n        <Container>\r\n            <h2 className={commonClasses.pageHeader}>Калькулятор</h2>\r\n          {/*  <CalculatorFormik MyPairData={MyPairData}/>*/}\r\n          <div><button onClick={()=>{reverseCurrency()}}>Поменять валюты местами</button></div>\r\n            <Calculator\r\n                selectValue1={selectValue1} selectValue2={selectValue2} Qty1={Qty1} Qty2={Qty2}\r\n                setQty1AC={setQty1AC} setQty2AC={setQty2AC} setSelectValue1={setSelectValue1}\r\n                setSelectValue2={setSelectValue2} MyPairData={MyPairData} Range1={Range1} Range2={Range2}\r\n                Errors={Errors}\r\n            />\r\n        </Container>\r\n    </div>\r\n\r\n    return (<div>\r\n        {home}\r\n    </div>)\r\n}\r\nconst mapStateToProps = (state:GlobalStateType) => {\r\n    return {\r\n        MyPairData: CalculatorSelectorsSimple.MyPairData(state),// данные выбраной пары\r\n        selectValue1: state.bestChange.selectValue1, // значение селекта 1 (валюты 1) (на его основе фильтруется bestChangeData и получаем MyPairData)\r\n        selectValue2: state.bestChange.selectValue2,// значение селекта 2 (валюты 2) (на его основе фильтруется bestChangeData и получаем MyPairData)\r\n        Qty1: state.bestChange.Qty1, // значение поля валюты 1 - при его вводе вычисляется Qty2\r\n        Qty2: state.bestChange.Qty2, // значение поля валюты 2 - при его вводе вычисляется Qty1\r\n        Range1: getRange1Reselect(state), // диапазон валют для первого селекта\r\n        Range2: getRange2Reselect(state), // диапазон валют для второго селекта\r\n        Errors:state.bestChange.Errors,// все ошибки формы\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    selectValue1AC, selectValue2AC, setQty1AC, setQty2AC, setMyPairDataAC, setRangesAC, setErrorsAC\r\n})(CalculatorContainer)\r\n\r\n"],"names":["_ref","selectValue1","selectValue2","Qty1","Qty2","setQty1AC","setQty2AC","setSelectValue1","setSelectValue2","MyPairData","Range1","Range2","Errors","kurs","IN","OUT","concat","Math","round","FROM","TO","inputsRender","_jsxs","children","_jsx","value","onChange","e","currentTarget","map","r","htmlFor","name","type","Number","ErrorInput1","ErrorInput2","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","Array","_key","_len2","funcs","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","Error","_directlyPassedOption2","finalMemoizeOptions","isArray","dependencies","every","dep","dependencyTypes","join","getDependencies","memoizedResultFunc","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","createSelector","CalculatorSelectorsSimple","state","RangeLocal","bestChange","bestChangeData","forEach","getRange1Reselect","getRange2Reselect","connect","selectValue1AC","selectValue2AC","setMyPairDataAC","setRangesAC","setErrorsAC","useEffect","MINAMOUNT","ErrorLocal","MAXAMOUNT","AMOUNT","home","Container","className","commonClasses","onClick","Calculator","TOLocal","FROMLocal"],"sourceRoot":""}